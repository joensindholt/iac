name: Terraform Plan/Apply

on:
  push:
    branches:
      - dev
      - main
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform:
    name: Plan / Apply
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: terraform
    permissions:
      contents: read
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Use Terraform 1.5.7
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: v

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init
      continue-on-error: true

    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch

    - name: Terraform Workspace
      id: wrkspc
      run: terraform workspace select -or-create ${{ steps.extract_branch.outputs.branch }}
      continue-on-error: true

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      continue-on-error: true

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false
      continue-on-error: true

    - name: Terraform Status
      if: steps.plan.outcome == 'failure' || steps.validate.outcome == 'failure' || steps.init.outcome == 'failure' || steps.fmt.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false